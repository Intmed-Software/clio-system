{
    "pipes": [
        {
            "name": "PaginationPipe",
            "id": "pipe-PaginationPipe-a7121c61ce634328d9d29f2342c53107",
            "file": "projects/clio-system/src/lib/data-grid/pipes/paginations.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "lista",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "itemsPerPage",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentPage",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "lista",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "itemsPerPage",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentPage",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "pure": false,
            "ngname": "pagination",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'pagination',\n\tpure: false,\n})\nexport class PaginationPipe implements PipeTransform {\n\ttransform(lista: any[], itemsPerPage: number, currentPage: number) {\n\t\tif (!itemsPerPage) {\n\t\t\treturn lista;\n\t\t}\n\t\tconst result = lista.reduce((resultArray, item, index) => {\n\n\t\t\tconst chunkIndex = Math.floor(index / itemsPerPage);\n\n\t\t\tif (!resultArray[chunkIndex]) {\n\t\t\t\tresultArray[chunkIndex] = [];\n\t\t\t}\n\n\t\t\tresultArray[chunkIndex].push(item);\n\n\t\t\treturn resultArray;\n\t\t}, []);\n\n\t\treturn result[currentPage];\n\t}\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "HeaderProps",
            "id": "interface-HeaderProps-0d7499a9384ad3bc216806b47b69a1b7",
            "file": "projects/clio-system/src/lib/data-grid/components/tables/types_d.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface HeaderProps {\n    name: string;\n    key?: string;\n    sortble?: boolean;\n    ref?: string;\n}\n",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "sortble",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-eaf13c49e433ba3f61dc2f55cfdbc856",
            "file": "projects/clio-system/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clio-button",
            "styleUrls": [
                "./button.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string | undefined"
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "fullWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string | undefined"
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "SizeProps"
                },
                {
                    "name": "type",
                    "defaultValue": "'button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string"
                },
                {
                    "name": "variant",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "VariantProps | undefined"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\nimport { BooleanInput } from '../../utils/boolean-Input';\nimport { SizeProps, VariantProps } from './types_d';\n\n\n@Component({\n\tselector: 'clio-button',\n\ttemplateUrl: './button.component.html',\n\tstyleUrls: ['./button.component.sass'],\n})\nexport class ButtonComponent implements OnInit {\n  @Input() variant: VariantProps | undefined;\n  @Input() size: SizeProps = 'medium';\n  @Input() @BooleanInput() fullWidth: any;\n  @Input() @BooleanInput() loading = false;\n  @Input() disabled = false;\n  @Input() type = 'button';\n  @Input() label: string | undefined;\n  @Input() buttonIcon: string | undefined;\n\n\n  get iconSize() {\n  \tswitch (this.size) {\n   \tcase 'medium':\n  \t\treturn 14;\n  \tcase 'small':\n  \t\treturn 12;\n  \tcase 'large':\n  \t\treturn 24;\n  \tdefault:\n  \t\treturn 14;\n  \t}\n  }\n\n  get buttonClassAttributs() {\n  \treturn {\n  \t\tfullWidth: this.fullWidth,\n  \t\ttext: this.variant === 'text',\n  \t\toutlined: this.variant === 'outlined',\n  \t\tcontained: this.variant === 'contained',\n  \t\t'size-small': this.size === 'small',\n  \t\t'size-medium': this.size === 'medium',\n  \t};\n  }\n\n  get loadingCase() {\n  \treturn {\n  \t\thideContainer: this.loading\n  \t};\n  }\n\n  ngOnInit(): void {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import ../../assets/styles/sass/colors\n@import ../../assets/styles/sass/sizes\n@import ../../assets/styles/sass/mixins\n\nbutton\n    padding: 0.469rem 1rem // 7.5px  16px \n    border-radius: 4px\n    font-size: $xs // 12px\n    font-weight: 700\n    outline: none\n    cursor: pointer\n    color: $black\n    background-color: transparent\n    border: none\n    position: relative\n    @include fontStyle()\n\n    &:hover\n       background-color: $accentBlue\n       transition: 0.3s\n       color: $mainBlue\n\n    &:disabled\n        cursor: not-allowed\n\n    &:active\n        background-color: $darkBlue\n        color: $white\n\n.contained\n    background: $mainBlue\n    color: $white\n    border: 0.125rem solid $mainBlue // 2px\n\n    &:disabled\n        background: $lightGray\n        color: $white\n        border: 0.125rem solid $lightGray // 2px\n\n.text\n    background-color: transparent\n    color: $mainBlue\n    border: 0.125rem solid transparent // 2px\n\n    &:hover\n       background-color: transparent\n       color: $mainBlue\n\n    &:disabled\n        color: $lightGray\n\n.outlined\n    background-color: transparent\n    color: $mainBlue\n    border: 0.125rem solid $mainBlue // 2px\n\n    &:disabled\n        color: $lightGray\n        border: 0.125rem solid $lightGray // 2px\n\n.fullWidth\n    width: 100%\n\n.hideContainer\n    visibility: hidden\n    opacity: 0\n\n.size-small\n    font-size: $xs // 12px\n    \n.size-medium\n    font-size: $small // 14px\n\n.loading-container\n    position: absolute\n    left: calc(50% - 7.5px)\n    top: calc(50% - 7.5px)\n    width: 100%\n    height: 100%\n",
                    "styleUrl": "./button.component.sass"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "iconSize": {
                    "name": "iconSize",
                    "getSignature": {
                        "name": "iconSize",
                        "type": "",
                        "returnType": "",
                        "line": 22
                    }
                },
                "buttonClassAttributs": {
                    "name": "buttonClassAttributs",
                    "getSignature": {
                        "name": "buttonClassAttributs",
                        "type": "",
                        "returnType": "",
                        "line": 35
                    }
                },
                "loadingCase": {
                    "name": "loadingCase",
                    "getSignature": {
                        "name": "loadingCase",
                        "type": "",
                        "returnType": "",
                        "line": 46
                    }
                }
            },
            "templateData": "<button\n  id=\"clio-button\"\n  [type]=\"type\"\n  [ngClass]=\"buttonClassAttributs\"\n  [disabled]=\"disabled || loading\"\n>\n  <span [ngClass]=\"loadingCase\">\n    <clio-icon *ngIf=\"buttonIcon\" [size]=\"iconSize\" id=\"icon-button-content\">\n      {{ buttonIcon }}\n    </clio-icon>\n    <div *ngIf=\"!buttonIcon\">\n      <span *ngIf=\"label\" id=\"simple-button-content\">\n        {{ label }}\n      </span>\n      <span *ngIf=\"!label\" id=\"simple-button-content\">\n        <ng-content></ng-content>\n      </span>\n    </div>\n  </span>\n  <div *ngIf=\"loading\" class=\"loading-container\" id=\"loading-button-content\">\n    <clio-circular-progress size=\"15\"></clio-circular-progress>\n  </div>\n</button>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-e6064bb9e3aa4441076ef57e6aa62452",
            "file": "projects/clio-system/src/lib/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cs-card",
            "styleUrls": [
                "./card.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'cs-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.sass']\n})\nexport class CardComponent  {}",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n.cs-card\n    font-family: 'Inter', sans-serif\n    padding: 10px\n    border-radius: 5px\n    border-width: thin\n    display: block\n    max-width: 100%\n    outline: none\n    text-decoration: none\n    transition-property: box-shadow, opacity\n    overflow-wrap: break-word\n    position: relative\n    white-space: normal\n    background-color: #FFFFFF\n\n    &-shadow\n        box-shadow: 0 2px 1px -1px rgba(0, 0, 0, .2), 0 1px 1px 0 rgba(0, 0, 0, .14), 0 1px 3px 0 rgba(0, 0, 0, .12) !important",
                    "styleUrl": "./card.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"cs-card cs-card-shadow\">\n    <ng-content>\n    </ng-content>\n</div>"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-cc9fc56e6bef77b30bf1302ce44d04b3",
            "file": "projects/clio-system/src/lib/chip/chip.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clio-chip",
            "styleUrls": [
                "./chip.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionClose",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "any"
                },
                {
                    "name": "color",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "ColorProps"
                },
                {
                    "name": "customClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string | undefined"
                },
                {
                    "name": "dark",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string | undefined"
                },
                {
                    "name": "variant",
                    "defaultValue": "'contained'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "VariantProps"
                }
            ],
            "outputsClass": [
                {
                    "name": "onClose",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onHandleClickClose",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n\tComponent,\n\tEventEmitter,\n\tInput, Output,\n\tViewEncapsulation\n} from '@angular/core';\nimport { BooleanInput } from '../../utils/boolean-Input';\nimport { ColorProps, VariantProps } from './types_d';\n\n@Component({\n\tselector: 'clio-chip',\n\ttemplateUrl: './chip.component.html',\n\tstyleUrls: ['./chip.component.sass'],\n\tencapsulation: ViewEncapsulation.None,\n})\nexport class ChipComponent {\n  @Input() @BooleanInput() actionClose: any;\n  @Input() variant: VariantProps = 'contained';\n  @Input() label: string | undefined;\n  @Input() dark = true;\n  @Input() color: ColorProps = 'primary';\n  @Input() customClass: string | undefined;\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onClose = new EventEmitter<any>();\n\n  get className() {\n  \tconst createClass = (): string => {\n  \t\tconst type = this.variant === 'outlined' ? null : this.dark ? 'dark' : 'light';\n  \t\tconst cls: any[] = [this.variant, this.color];\n  \t\tif (type) {\n  \t\t\tcls.push(type);\n  \t\t}\n  \t\treturn 'chip ' + cls.join('-');\n  \t};\n  \treturn this.customClass ?  `chip ${this.customClass}` : createClass();\n  }\n\n  onHandleClickClose() {\n  \tif(this.actionClose) {\n\t  this.onClose.emit({});\n  \t}\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import ../../assets/styles/sass/colors\n@import ../../assets/styles/sass/sizes\n@import ../../assets/styles/sass/mixins\n\n@mixin chip-properties-contained($background, $color)\n    background-color: $background\n    color: $color\n\n@mixin chip-properties-outlined($mainColor)\n    background-color: transparent\n    color: $mainColor\n    border: 1px solid $mainColor\n\n@mixin aling-center-center()\n    display: flex\n    align-items: center\n    \n\n.chip\n    display: inline-block\n    padding: 0.281rem 1rem // 4.5px 16px\n    font-size: $small\n    font-weight: 400\n    position: relative\n    border-radius: 100px\n    justify-content: space-between\n    box-sizing: border-box\n    @include fontStyle()\n    \n.chip-content\n    @include aling-center-center()\n    \n.close-icon\n    margin-left: 0.5rem\n    cursor: pointer\n    @include aling-center-center()\n\n// Contained\n.contained-primary-dark\n    @include chip-properties-contained($mainBlue, $white)\n\n.contained-primary-light\n    @include chip-properties-contained($lightBlue, $mainBlue)\n\n.contained-warning-dark\n    @include chip-properties-contained($mediumAlert, $white)\n\n.contained-warning-light\n    @include chip-properties-contained($lightAlert, $darkAlert)\n\n.contained-error-dark\n    @include chip-properties-contained($mediumError, $white)\n\n.contained-error-light\n    @include chip-properties-contained($lightError, $mediumError)\n\n.contained-success-dark\n    @include chip-properties-contained($darkSuccess, $white)\n\n.contained-success-light\n    @include chip-properties-contained($lightSuccess, $darkSuccess)\n\n// oulined\n\n.outlined-primary\n    @include chip-properties-outlined($mainBlue)\n\n.outlined-warning\n    @include chip-properties-outlined($darkAlert)\n\n.outlined-error\n    @include chip-properties-outlined($mediumError)",
                    "styleUrl": "./chip.component.sass"
                }
            ],
            "stylesData": "",
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 26
                    }
                }
            },
            "templateData": "<div\n    id=\"chip\" \n    [class]=\"className\"\n>\n    <div class=\"chip-content\">\n        <div *ngIf=\"label\">\n        </div>\n        <div *ngIf=\"label; else contentCase\">\n            {{label}}\n        </div>\n        <ng-template #contentCase>\n            <div>\n                <ng-content></ng-content>\n            </div>\n        </ng-template>\n\n        <clio-icon \n            class=\"close-icon\" \n            *ngIf=\"actionClose\"\n            [size]=\"18\" \n            (click)=\"onHandleClickClose()\"\n        > \n            cancel\n        </clio-icon>\n    </div>\n</div>\n"
        },
        {
            "name": "CircularProgressComponent",
            "id": "component-CircularProgressComponent-3778a7faeb5e8868c0a2c68ef87dc748",
            "file": "projects/clio-system/src/lib/circular-progress/circular-progress.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clio-circular-progress",
            "styleUrls": [
                "./circular-progress.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./circular-progress.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "'20'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string | number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n\n@Component({\n\tselector: 'clio-circular-progress',\n\ttemplateUrl: './circular-progress.component.html',\n\tstyleUrls: ['./circular-progress.component.sass']\n})\nexport class CircularProgressComponent {\n\n  @Input() size: string | number = '20';\n\n  get loaderSize() {\n  \treturn `${this.size}px`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import ../../assets/styles/sass/colors\n\n.loader\n  border: 2px solid $white\n  border-radius: 50%\n  border-top: 2px solid $mediumGray\n  width: 30px\n  height: 30px\n  -webkit-animation: spin 0.8s linear infinite\n  /* Safari\n  animation: spin 0.8s linear infinite\n\n/* Safari\n@-webkit-keyframes spin\n  0%\n    -webkit-transform: rotate(0deg)\n  100%\n    -webkit-transform: rotate(360deg)\n\n@keyframes spin\n  0%\n    transform: rotate(0deg)\n  100%\n    transform: rotate(360deg)",
                    "styleUrl": "./circular-progress.component.sass"
                }
            ],
            "stylesData": "",
            "accessors": {
                "loaderSize": {
                    "name": "loaderSize",
                    "getSignature": {
                        "name": "loaderSize",
                        "type": "",
                        "returnType": "",
                        "line": 13
                    }
                }
            },
            "templateData": "<div \n    class=\"loader\"\n    [style.width]=\"loaderSize\"\n    [style.height]=\"loaderSize\"\n></div>"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-72aaa64e3c91a535d1bb21ee7aef28f4",
            "file": "projects/clio-system/src/lib/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clio-icon",
            "styleUrls": [
                "./icon.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "size",
                    "defaultValue": "24",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "sizeProperties",
                    "args": [],
                    "optional": false,
                    "returnType": "{ 'font-size': string; }",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\n\n@Component({\n\tselector: 'clio-icon',\n\ttemplateUrl: './icon.component.html',\n\tstyleUrls: ['./icon.component.sass']\n})\nexport class IconComponent {\n\t@Input() size = 24;\n\n\tsizeProperties() {\n \treturn {\n\t\t\t'font-size': this.size + 'px'\n\t\t};\n\t}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '~material-design-icons/iconfont/material-icons.css'",
                    "styleUrl": "./icon.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<i class=\"material-icons\" [ngStyle]=\"sizeProperties()\">\n    <ng-content>\n    </ng-content>\n</i>"
        },
        {
            "name": "PaginationComponent",
            "id": "component-PaginationComponent-cd191f136b3b072be5a7ef3696990396",
            "file": "projects/clio-system/src/lib/data-grid/components/pagination/pagination.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clio-pagination",
            "styleUrls": [
                "./pagination.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./pagination.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number"
                },
                {
                    "name": "itemsPerPage",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number"
                },
                {
                    "name": "list",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Array<any>"
                }
            ],
            "outputsClass": [
                {
                    "name": "currentPageChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleChangeCurrentPage",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previous",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setSelectionPage",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n\tselector: 'clio-pagination',\n\ttemplateUrl: './pagination.component.html',\n\tstyleUrls: ['./pagination.component.sass']\n})\nexport class PaginationComponent {\n\n  @Input() itemsPerPage = 10;\n  @Input() currentPage = 0;\n  @Output() currentPageChange = new EventEmitter<number>();\n\n\n  @Input() list: Array<any> = [];\n\n  get nRows() {\n  \treturn this.list.length;\n  }\n\n  get nPages() {\n  \treturn Math.floor(this.nRows / this.itemsPerPage);\n  }\n\n  get optionPages() {\n  \treturn Array(this.nPages).fill(1).map((x, i) => i);\n  }\n\n  handleChangeCurrentPage = () => this.currentPageChange.emit(this.currentPage);\n\n  previous() {\n  \tif (this.currentPage > 0) {\n  \t\tthis.currentPage--;\n  \t\tthis.handleChangeCurrentPage();\n  \t}\n  }\n  next() {\n  \tif (this.currentPage < this.nPages - 1) {\n  \t\t{this.currentPage++;}\n  \t}\n  \tthis.handleChangeCurrentPage();\n  }\n\n  setSelectionPage(event: any) {\n  \t// eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n  \tthis.currentPage = parseInt(event.target.value);\n  \tthis.handleChangeCurrentPage();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n@import '~material-design-icons/iconfont/material-icons.css'\n@import ../../../../assets/styles/sass/colors\n@import ../../../../assets/styles/sass/sizes\n\n@mixin alignCenter()\n    display: flex\n    align-items: center\n\n.clio-pagination\n    width: 100%\n    background-color: $white\n    color: $darkGray\n    font-size: $xs\n    padding: 16px\n    box-sizing: border-box\n    @include alignCenter()\n    justify-content: space-between\n\n.clio-map\n    font-weight: bold\n    @include alignCenter()\n\nselect\n    cursor: pointer\n    position: relative\n    font-size: $xs\n    color: $black\n    border-radius: 4px\n    background-color: $white \n    border: 1px solid $mediumGray\n\n\n.clio-actions\n    display: flex\n\n    .clio-page-text\n        margin-right: 8px\n        font-weight: 700\n        @include alignCenter()\n\n    .clio-action-arrows\n        @include alignCenter()\n\n.clio-options-pages\n    @include alignCenter()\n\ni\n    color: $lightGray\n    font-size: $xs\n    cursor: pointer\n\n    &:hover\n        color: $mediumBlue\n        transition: 0.7\n",
                    "styleUrl": "./pagination.component.sass"
                }
            ],
            "stylesData": "",
            "accessors": {
                "nRows": {
                    "name": "nRows",
                    "getSignature": {
                        "name": "nRows",
                        "type": "",
                        "returnType": "",
                        "line": 17
                    }
                },
                "nPages": {
                    "name": "nPages",
                    "getSignature": {
                        "name": "nPages",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                },
                "optionPages": {
                    "name": "optionPages",
                    "getSignature": {
                        "name": "optionPages",
                        "type": "",
                        "returnType": "",
                        "line": 25
                    }
                }
            },
            "templateData": "<div class=\"clio-pagination\">\n    <div class=\"clio-map\">\n        {{currentPage + 1}} - {{nPages}} de {{nRows}}\n    </div>\n    <div class=\"clio-actions\">\n        <div class=\"clio-options-pages\">\n            <span class=\"clio-page-text\"> Página </span>\n            <select (change)=\"setSelectionPage($event)\">\n                <option *ngFor=\"let opt of optionPages\" [value]=\"opt\" [selected]=\"opt\">{{opt + 1}}</option>\n            </select>\n        </div>\n        <div class=\"clio-action-arrows\">\n            <i \n                id=\"previous\"\n                class=\"material-icons\" \n                (click)=\"previous()\"\n            >\n                chevron_left\n            </i>\n            <i \n                id=\"next\" \n                class=\"material-icons\" \n                (click)=\"next()\"\n            >\n                navigate_next\n            </i>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "SwitchComponent",
            "id": "component-SwitchComponent-c3211bf9be1a37c8740ae58d43e7b06a",
            "file": "projects/clio-system/src/lib/switch/switch.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cs-switch",
            "styleUrls": [
                "./switch.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./switch.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "model",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "boolean"
                }
            ],
            "outputsClass": [
                {
                    "name": "modelChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "handleChangeModel",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n\n@Component({\n\tselector: 'cs-switch',\n\ttemplateUrl: './switch.component.html',\n\tstyleUrls: ['./switch.component.sass']\n})\nexport class SwitchComponent {\n\n  @Input() model = false;\n  @Output() modelChange = new EventEmitter<boolean>();\n\n  handleChangeModel = () => this.modelChange.emit(!this.model);\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../assets/styles/sass/colors\"\n\n.cs-switch\n    position: relative\n    display: inline-block\n    width: 64px\n    height: 32px\n\n    & input\n        opacity: 0\n        width: 0\n        height: 0\n\n.cs-slider\n    position: absolute\n    cursor: pointer\n    top: 0\n    left: 0\n    right: 0\n    bottom: 0\n    border: 1px solid $mediumGray\n    background-color: $white\n    -webkit-transition: .4s\n    transition: .4s\n\n\n    &:before\n        position: absolute\n        content: \"\"\n        height: 24px\n        width: 24px\n        left: 4px\n        bottom: 3px\n        background-color: $mediumGray\n        -webkit-transition: .4s\n        transition: .4s\n\n\n    input:checked + &\n        background-color: $mainBlue\n        border: 1px solid $mainBlue\n\n\n    input:checked + &:before\n        -webkit-transform: translateX(26px)\n        -ms-transform: translateX(26px)\n        transform: translateX(26px)\n        background-color: $white\n        left: 8px\n\n    &.cs-round\n        border-radius: 34px\n\n\n    &.cs-round:before\n        border-radius: 50%\n",
                    "styleUrl": "./switch.component.sass"
                }
            ],
            "stylesData": "",
            "templateData": "<label class=\"cs-switch\">\n    <input type=\"checkbox\" [checked]=\"model\" (change)=\"handleChangeModel()\">\n    <span class=\"cs-slider cs-round\"></span>\n</label>"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-277c94193cb1a1b9bb645d284e622730",
            "file": "projects/clio-system/src/lib/data-grid/components/tables/table.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "clio-table",
            "styleUrls": [
                "./table.component.sass"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "headers",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "HeaderProps[]"
                },
                {
                    "name": "itemsPerPage",
                    "defaultValue": "10",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number"
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean"
                },
                {
                    "name": "messageOnEmptylist",
                    "defaultValue": "'Nenhum resultado buscado ou encontrado'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "rows",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "any[]"
                },
                {
                    "name": "rowsTemplate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any"
                },
                {
                    "name": "showPagination",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "currentPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "treatsValue",
                    "args": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "val",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { BooleanInput } from '../../../../utils/boolean-Input';\nimport { HeaderProps } from './types_d';\n\n@Component({\n\tselector: 'clio-table',\n\ttemplateUrl: './table.component.html',\n\tstyleUrls: ['./table.component.sass'],\n\tencapsulation: ViewEncapsulation.None\n})\nexport class TableComponent {\n  @Input() messageOnEmptylist? = 'Nenhum resultado buscado ou encontrado';\n  @Input() rowsTemplate: any;\n  @Input() headers: HeaderProps[] = [];\n  @Input() rows: any[] = [];\n  @Input() loading = false;\n  @Input() itemsPerPage = 10;\n  @Input() @BooleanInput() showPagination: any;\n\n  currentPage = 0;\n \tget isEmpt() {\n  \treturn !!!this.rows.length;\n  }\n\n  treatsValue(val: any) {\n  \treturn typeof val === 'number' || typeof val === 'string'\n  \t\t? val\n  \t\t: JSON.stringify(val);\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import ../../../../assets/styles/sass/colors\n@import ../../../../assets/styles/sass/sizes\n@import ../../../../assets/styles/sass/mixins\n\n\ntable\n  width: 100%\n  table-layout: fixed\n  border-collapse: collapse\n  \n  thead tr\n    height: 1.875rem // 30px\n\n    th\n      text-align: left\n      font-size: 0.75rem // 12px\n      padding: 12px\n      color: $darkBlue\n      background-color: $accentBlue\n      @include fontStyle()\n\n  tbody\n    tr\n      height: 2.5rem // 40px\n      border-bottom: 1px solid #CCCCCC\n      padding: 0.625rem\n\n    tr:last-child\n      border-bottom: none\n    td\n      font-size: $xs //12px\n      text-align: left\n      white-space: nowrap\n      text-overflow: ellipsis\n      overflow: hidden\n      color: $darkestGray\n      padding:0 12px\n      @include fontStyle()\n \n.table-content\n  background-color: $white\n  width: 100%\n  position: relative\n\n.table-round-corner\n  width: 100%\n  overflow: hidden\n  border-collapse: separate\n  -webkit-border-radius: 25px\n  -moz-border-radius: 25px\n  border-radius: 8px\n  border: 2px solid $accentBlue\n\n// Loadder\n.spinner-container\n  height: 30vh\n  display: flex\n  justify-content: center\n  align-items: center\n\n// Empty\n.table-empty-content\n  width: 100%\n  display: flex\n  align-items: center\n  justify-content: center\n  min-height: 200px\n",
                    "styleUrl": "./table.component.sass"
                }
            ],
            "stylesData": "",
            "accessors": {
                "isEmpt": {
                    "name": "isEmpt",
                    "getSignature": {
                        "name": "isEmpt",
                        "type": "",
                        "returnType": "",
                        "line": 21
                    }
                }
            },
            "templateData": "<div class=\"table-content table-round-corner\">\n  <table>\n    <thead>\n      <tr>\n        <th *ngFor=\"let header of headers\" [id]=\"header.ref ? header.ref : ''\">\n          {{ header.name }}\n        </th>\n      </tr>\n    </thead>\n    <ng-template\n      [ngTemplateOutlet]=\"!loading && !isEmpt ? tableContent : null\"\n    ></ng-template>\n  </table>\n\n  <ng-template\n    [ngTemplateOutlet]=\"loading ? tableLoading : isEmpt ? tableEmpty : null\"\n  ></ng-template>\n  <clio-pagination\n    [list]=\"rows\"\n    [itemsPerPage]=\"itemsPerPage\"\n    [(currentPage)]=\"currentPage\"\n    *ngIf=\"showPagination\"\n  >\n  </clio-pagination>\n</div>\n\n<ng-template #tableHeader>\n  <thead>\n    <tr>\n      <th *ngFor=\"let header of headers\">\n        {{ header.name }}\n      </th>\n    </tr>\n  </thead>\n</ng-template>\n\n<ng-template #tableContent>\n  <tbody>\n    <ng-template\n      ngFor\n      let-row\n      [ngForOf]=\"rows | pagination: itemsPerPage:currentPage\"\n      let-i=\"index\"\n      let-odd=\"odd\"\n    >\n      <tr>\n        <ng-template\n          [ngTemplateOutlet]=\"rowsTemplate ? rowsTemplate : defaultTableRow\"\n          [ngTemplateOutletContext]=\"{row, headers}\"\n        >\n        </ng-template>\n      </tr>\n    </ng-template>\n  </tbody>\n</ng-template>\n\n<ng-template #defaultTableRow let-row=\"row\" let-headers=\"headers\">\n  <td *ngFor=\"let header of headers\">\n    {{ header?.key ? treatsValue(row[header.key]) : \"-\" }}\n  </td>\n</ng-template>\n\n<ng-template #tableLoading>\n  <div class=\"spinner-container\" *ngIf=\"loading\">\n    <clio-circular-progress [size]=\"80\"></clio-circular-progress>\n  </div>\n</ng-template>\n\n<ng-template #tableEmpty>\n  <div class=\"table-empty-content\">\n    {{ messageOnEmptylist }}\n  </div>\n</ng-template>"
        }
    ],
    "modules": [
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-d9db1ef030cd32ec4070f85be2f9d648",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/clio-system/src/lib/button/button.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CircularProgressModule } from '../circular-progress/circular-progress.module';\nimport { IconModule } from '../icon/icon.module';\nimport { ButtonComponent } from './button.component';\n\n@NgModule({\n\tdeclarations: [\n\t\tButtonComponent,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tIconModule,\n\t\tCircularProgressModule\n\t],\n\texports: [\n\t\tButtonComponent\n\t]\n})\nexport class ButtonModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CircularProgressModule"
                        },
                        {
                            "name": "IconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CardModule",
            "id": "module-CardModule-c9c7170023b919fde58617e7f2b64c4a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/clio-system/src/lib/card/card.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardComponent } from './card.component';\n@NgModule({\n  declarations: [\n    CardComponent\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    CardComponent\n  ]\n})\n\nexport class CardModule {}",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CardComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CardComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChipModule",
            "id": "module-ChipModule-21662a6a1189e35e691b9ff2cb80c2b9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/clio-system/src/lib/chip/chip.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../icon/icon.module';\nimport { ChipComponent } from './chip.component';\n\n@NgModule({\n\tdeclarations: [ChipComponent],\n\timports: [CommonModule, IconModule],\n\texports: [ChipComponent],\n})\nexport class ChipModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CircularProgressModule",
            "id": "module-CircularProgressModule-4b7fb16b1c59535700d72faa9b5a21a8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/clio-system/src/lib/circular-progress/circular-progress.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CircularProgressComponent } from './circular-progress.component';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tCircularProgressComponent\n\t],\n\timports: [\n\t\tCommonModule\n\t],\n\texports:[\n\t\tCircularProgressComponent\n\t]\n})\nexport class CircularProgressModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CircularProgressComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CircularProgressComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CSSwitchModule",
            "id": "module-CSSwitchModule-ac3c236df952f2ef884976a9ec21f764",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/clio-system/src/lib/switch/switch.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SwitchComponent } from './switch.component';\n\n\n@NgModule({\n  declarations: [SwitchComponent],\n  imports: [CommonModule],\n  exports: [SwitchComponent]\n})\nexport class CSSwitchModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SwitchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SwitchComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DataGridModule",
            "id": "module-DataGridModule-d459f26842ff3a3fd3c4e9868f498359",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/clio-system/src/lib/data-grid/data-grid.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CircularProgressModule } from '../circular-progress/circular-progress.module';\nimport { PaginationComponent } from './components/pagination/pagination.component';\nimport { TableComponent } from './components/tables/table.component';\nimport { PaginationPipe } from './pipes/paginations.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tTableComponent,\n\t\tPaginationComponent,\n\t\tPaginationPipe,\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tCircularProgressModule\n\t],\n\texports:[\n\t\tTableComponent,\n\t\tPaginationComponent,\n\t\tPaginationPipe\n\t]\n})\nexport class DataGridModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "PaginationPipe"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "CircularProgressModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "PaginationComponent"
                        },
                        {
                            "name": "PaginationPipe"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconModule",
            "id": "module-IconModule-ac6f471d96bf23ae1215339a9312f03c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/clio-system/src/lib/icon/icon.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconComponent } from './icon.component';\n\n\n@NgModule({\n\tdeclarations: [\n\t\tIconComponent\n\t],\n\timports: [\n\t\tCommonModule\n\t],\n\texports: [\n\t\tIconComponent\n\t]\n})\nexport class IconModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "ActionClose",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Contained",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "headers",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n\t{ name: 'Name', key: 'name' },\n\t{ name: 'Email', key: 'email' },\n\t{ name: 'Last name', key: 'last_name' },\n\t{ name: 'Gender', key: 'gender' },\n\t{ name: 'ip address', key: 'ip_address' },\n]"
            },
            {
                "name": "lorem",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`\nLorem Ipsum is simply dummy text of the printing and typesetting industry. \nLorem Ipsum has been the industry's standard dummy text ever since the 1500s, \nwhen an unknown printer took a galley of type and scrambled it to make a type specimen book. \nIt has survived not only five centuries, but also the leap into electronic typesetting,\nremaining essentially unchanged. It was popularised in the 1960s with the release of \nLetraset sheets containing Lorem Ipsum passages, and more recently with desktop \npublishing software like Aldus PageMaker including versions of Lorem Ipsum.\n`"
            },
            {
                "name": "Outlined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "WithTemplate.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/switch/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/card/card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<CardComponent>",
                "defaultValue": "(args: CardComponent) => ({\n    template: `{{ cardContent }}`,\n    props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ChipComponent>",
                "defaultValue": "args => ({\n\tprops: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent>",
                "defaultValue": "args => ({\n\tprops: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "args => ({\n\tprops: args\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/switch/switch.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SwitchComponent>",
                "defaultValue": "(args: SwitchComponent) => ({\n\tprops: args,\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Warning",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/clio-system/src/lib/icon/icon.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args: IconComponent) => ({\n\t// eslint-disable-next-line quotes\n\ttemplate: `{{ buttonValue }}`,\n\tprops: {\n\t\t...args\n\t},\n})"
            }
        ],
        "functions": [
            {
                "name": "BooleanInput",
                "file": "projects/clio-system/src/utils/boolean-Input.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "any"
            }
        ],
        "typealiases": [
            {
                "name": "ButtonTypeProps",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"submit\" | \"button\"",
                "file": "projects/clio-system/src/lib/button/types_d.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "ColorProps",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"warning\" | \"error\" | \"success\"",
                "file": "projects/clio-system/src/lib/chip/types_d.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "SizeProps",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"small\" | \"medium\" | \"large\"",
                "file": "projects/clio-system/src/lib/button/types_d.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "VariantProps",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"outlined\" | \"contained\"",
                "file": "projects/clio-system/src/lib/chip/types_d.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            },
            {
                "name": "VariantProps",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"outlined\" | \"text\" | \"contained\"",
                "file": "projects/clio-system/src/lib/button/types_d.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 185
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/clio-system/src/lib/chip/chip.stories.ts": [
                {
                    "name": "ActionClose",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ChipComponent>",
                    "defaultValue": "args => ({\n\tprops: args\n})"
                },
                {
                    "name": "Warning",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/chip/chip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/clio-system/src/lib/button/button.stories.ts": [
                {
                    "name": "Contained",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Outlined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "args => ({\n\tprops: args\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/clio-system/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/clio-system/src/lib/data-grid/data-grid.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "headers",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n\t{ name: 'Name', key: 'name' },\n\t{ name: 'Email', key: 'email' },\n\t{ name: 'Last name', key: 'last_name' },\n\t{ name: 'Gender', key: 'gender' },\n\t{ name: 'ip address', key: 'ip_address' },\n]"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent>",
                    "defaultValue": "args => ({\n\tprops: args\n})"
                }
            ],
            "projects/clio-system/src/lib/card/card.stories.ts": [
                {
                    "name": "lorem",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`\nLorem Ipsum is simply dummy text of the printing and typesetting industry. \nLorem Ipsum has been the industry's standard dummy text ever since the 1500s, \nwhen an unknown printer took a galley of type and scrambled it to make a type specimen book. \nIt has survived not only five centuries, but also the leap into electronic typesetting,\nremaining essentially unchanged. It was popularised in the 1960s with the release of \nLetraset sheets containing Lorem Ipsum passages, and more recently with desktop \npublishing software like Aldus PageMaker including versions of Lorem Ipsum.\n`"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/card/card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<CardComponent>",
                    "defaultValue": "(args: CardComponent) => ({\n    template: `{{ cardContent }}`,\n    props: args,\n})"
                }
            ],
            "projects/clio-system/src/lib/icon/icon.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "WithTemplate.bind({})"
                },
                {
                    "name": "WithTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/icon/icon.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args: IconComponent) => ({\n\t// eslint-disable-next-line quotes\n\ttemplate: `{{ buttonValue }}`,\n\tprops: {\n\t\t...args\n\t},\n})"
                }
            ],
            "projects/clio-system/src/lib/switch/switch.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/switch/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/clio-system/src/lib/switch/switch.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SwitchComponent>",
                    "defaultValue": "(args: SwitchComponent) => ({\n\tprops: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "projects/clio-system/src/utils/boolean-Input.ts": [
                {
                    "name": "BooleanInput",
                    "file": "projects/clio-system/src/utils/boolean-Input.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "any"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/clio-system/src/lib/button/types_d.ts": [
                {
                    "name": "ButtonTypeProps",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"submit\" | \"button\"",
                    "file": "projects/clio-system/src/lib/button/types_d.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "SizeProps",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"small\" | \"medium\" | \"large\"",
                    "file": "projects/clio-system/src/lib/button/types_d.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "VariantProps",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"outlined\" | \"text\" | \"contained\"",
                    "file": "projects/clio-system/src/lib/button/types_d.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ],
            "projects/clio-system/src/lib/chip/types_d.ts": [
                {
                    "name": "ColorProps",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"warning\" | \"error\" | \"success\"",
                    "file": "projects/clio-system/src/lib/chip/types_d.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                },
                {
                    "name": "VariantProps",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"outlined\" | \"contained\"",
                    "file": "projects/clio-system/src/lib/chip/types_d.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 185
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/clio-system/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Contained",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outlined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lorem",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/card/card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ActionClose",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/chip/chip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Warning",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/circular-progress/circular-progress.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CircularProgressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/data-grid/components/pagination/pagination.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/data-grid/components/tables/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/data-grid/components/tables/types_d.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HeaderProps",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "headers",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/data-grid/data-grid.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/data-grid/pipes/paginations.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "PaginationPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/icon/icon.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/switch/switch.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SwitchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/switch/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/lib/switch/switch.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/clio-system/src/utils/boolean-Input.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "BooleanInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}